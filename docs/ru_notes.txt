Для удобства нужен мини экран постоянно показывающий изменения, если они достаточно мало чтобы долго их искать
Например когда обновляются 2-3 пикселя в секунду

Важно добавить возможность постепенного наращивания итераций в ходе рендеринга.
Указывать их заранее может быть неудобно.

Стоит разделить всё пространство на области (прямоугольники) и при долгой генерации
показать очередь таких элементов на рендер.
Критерий качества очереди: такие элементы уходят из нее примерно раз в секунду.
Это для разнообразия визуала

Области должны давать больше информации при наведении на них мыши

Стоит завести боковую панель для очереди и информации об областях и конкретных пикселях
Также стоит выводить информацию о конфигурации картинки (координаты, формула и т.д.),
о скорости генерации в пикселях, итерациях, прошедшем времени

Следует разделить информацию о количестве итераций и цвете пикселя.
Тогда придется хранить и генерировать их отдельно, один за другим

Также для удобства важен не зависающий интерфейс.
Тогда возможно следует запускать вычисления на одном процессе с интерфейсом и на отдельном их инициализировать
При возникновении или заранее известных проблемах в интерфейсе использовать для вычислений отельный процесс
Затем будет необходимо без помех перенести оттуда информацию в основной

Также нужно несколько изменить текущую цветовую палитру.
Сейчас многие соседние цвета сливаются в один
А также не понятен порядок вычислений, цвета 1-15 итераций выглядят также как цвета 100к-500к итераций
Возможно опираться стоит на HSV

Для некоторых формул есть такой интересный факт:
отметка итераций при которой большая часть пикселей "раскрашивается" очень высокий
Например для z = z^(-8-1/2) - z такое число ~100.000 итераций

Важно определить цель - получить новые формулы, которые генерируют неприятные для глаза фракталы
Критериев пока нет, но вот их варианты: количество элементов, интуитивность самоповторения элементов,
наличие областей с плавными линиями, наличие областей с очень четкими контурами, отсутствие пустых пространств,
отсутствие "белого шума", площадь зашумленных областей

Вопрос: насколько один из элементов похож на круг:
формула: z = 19*z^17 - 17*z^19 - c^z * z^c
real: 0.9982144579148436, imag: 0, zoom: ~2^15 (width ~2^-15)
лимит итераций: ~3000

Важно научиться делать переходы, особенно плавные
Интересно будет плавно переходит от базового множества к множествам с огромными формулами

Написать про -5.5, -4.5 и logistic map
про гиперболичность, связь изолиний и формул и многое другое.
Узнать про теорию Галуа и тд и тп

Построить граф модификаций формулы, выделить на нем "computation affordable" точки и визуально приятные
Возможно стоит искать те точки, в которых визуальная приятность достижима в принципе
и достижима небольшими по времени вычислениями, без бесконечных вычислений

Для однозначности очень важно округлять координаты в конфигурации в зависимости от приближения (zoom)
Это позволит не плодить копии одной конфигурации различающихся лишь последними знаками в float

Формулы колоссально возрасли. Преимущества: в одном фрактале объединено много признаков более простых

Иногда следует генерировать изображение не полностью, а начиная с интересных деталей
Некоторые области с огромным количеством итераций не отличимы от бесконечных итераций,
это можно исправить запуская вычисления для отдельных случайных пикселей.
Позволит даже выставлять необходимый предел итераций

Добавить возможность заполнять области с бесконечными итерациями. Видел такое в одном из youtube-видео,
там использовались случайно бегающие точки. Было похоже на вариант построения треугольника Серпинского случайными точками
